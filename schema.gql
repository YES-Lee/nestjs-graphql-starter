# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type A {
  id: Int
  name: String
  bList: [B]
  abList: [AB]
}

type AB {
  id: Int
  a_id: Int
  b_id: Float
  note: String
  a: A
  b: B
}

type B {
  id: Int
  name: String
  abList: [AB]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

enum GenderEnum {
  MALE
  FEMALE
  OTHER
}

"""分页接口返回数据接口"""
interface IPageResult {
  count: Int
}

"""登录账号"""
input LoginInput {
  """用户名"""
  username: String!

  """密码"""
  password: String!
}

"""登录返回结果"""
type LoginResult {
  id: Float

  """用户名"""
  username: String

  """昵称"""
  nickname: String

  """性别"""
  gender: GenderEnum
  created_at: DateTime
  updated_at: DateTime
  deleted_at: DateTime

  """登录认证令牌"""
  token: String
}

"""菜单"""
type MenuEntity {
  id: Float

  """菜单名"""
  name: String
}

type Mutation {
  """发送测试信息"""
  sendTestMessage(message: String): String

  """用户登录"""
  login(account: LoginInput): LoginResult
}

type Query {
  """测试接口"""
  test: String

  """环境变量"""
  systemInfo: SystemInfoResult

  """获取当前登录用户信息"""
  getCurrentUser: UserDetailResult

  """获取用户列表"""
  userList(
    """页码"""
    page: Int = 1

    """每页数量"""
    pageSize: Int = 10
  ): UserListResult
  bById: B
  abList: [AB]
  abListByAId(a_id: Float): [AB]
  abListByBId(b_id: Float): [AB]
  aById: A
  aList: [A]
}

type Subscription {
  onTestMessage: String
}

"""系统信息"""
type SystemInfoResult {
  """版本"""
  version: String

  """环境变量"""
  env: String
}

"""用户信息"""
type UserDetailResult {
  id: Float

  """用户名"""
  username: String

  """昵称"""
  nickname: String

  """性别"""
  gender: GenderEnum
  created_at: DateTime
  updated_at: DateTime
  deleted_at: DateTime
}

"""用户信息"""
type UserEntity {
  id: Float

  """用户名"""
  username: String

  """昵称"""
  nickname: String

  """性别"""
  gender: GenderEnum
  created_at: DateTime
  updated_at: DateTime
  deleted_at: DateTime
}

"""用户列表"""
type UserListResult implements IPageResult {
  count: Int
  rows: [UserDetailResult]
}
